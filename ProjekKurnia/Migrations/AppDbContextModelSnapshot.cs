// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjekKurnia.Data;

namespace ProjekKurnia.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("ProjekKurnia.Models.Departemen", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("NamaDep")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tb_Departemen");
                });

            modelBuilder.Entity("ProjekKurnia.Models.Dokter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Alamat")
                        .HasColumnType("text");

                    b.Property<string>("Departemen")
                        .HasColumnType("text");

                    b.Property<string>("Hp")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("NamaD")
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalD")
                        .HasColumnType("datetime");

                    b.Property<string>("TempatD")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tb_Dokter");
                });

            modelBuilder.Entity("ProjekKurnia.Models.Inap", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("BiayaInap")
                        .HasColumnType("text");

                    b.Property<string>("Departemen")
                        .HasColumnType("text");

                    b.Property<string>("Dokter")
                        .HasColumnType("text");

                    b.Property<string>("Pasien")
                        .HasColumnType("text");

                    b.Property<string>("Ruangan")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tb_RawatInap");
                });

            modelBuilder.Entity("ProjekKurnia.Models.Jalan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Biaya")
                        .HasColumnType("text");

                    b.Property<string>("Departemen")
                        .HasColumnType("text");

                    b.Property<string>("Dokter")
                        .HasColumnType("text");

                    b.Property<string>("Pasien")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tb_RawatJalan");
                });

            modelBuilder.Entity("ProjekKurnia.Models.Pasien", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Alamat")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("NamaP")
                        .HasColumnType("text");

                    b.Property<string>("NoHp")
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalL")
                        .HasColumnType("datetime");

                    b.Property<string>("TempatL")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tb_Pasien");
                });

            modelBuilder.Entity("ProjekKurnia.Models.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tb_Roles");
                });

            modelBuilder.Entity("ProjekKurnia.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RolesId")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Username");

                    b.HasIndex("RolesId");

                    b.ToTable("Tb_User");
                });

            modelBuilder.Entity("ProjekKurnia.Models.User", b =>
                {
                    b.HasOne("ProjekKurnia.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
